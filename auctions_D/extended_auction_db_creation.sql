DROP TABLE IF EXISTS ARTWORK CASCADE;
DROP TABLE IF EXISTS TYPEOFWORK;
DROP TABLE IF EXISTS ARTIST;
DROP TABLE IF EXISTS AUCTION CASCADE;
DROP TABLE IF EXISTS AUCTIONHOUSE CASCADE;
DROP TABLE IF EXISTS INCLUDED;
DROP TABLE IF EXISTS COLLECTOR CASCADE;
DROP TABLE IF EXISTS INTEREST;
DROP TABLE IF EXISTS POSTS CASCADE;
DROP TABLE IF EXISTS FOLLOWS CASCADE;
DROP TABLE IF EXISTS ARTWORKINTEREST CASCADE;
DROP TABLE IF EXISTS POSTED CASCADE;
DROP TABLE IF EXISTS GRAPHNODE CASCADE;
DROP TABLE IF EXISTS NORMALIZEDPROPERTYLINK CASCADE;
DROP TABLE IF EXISTS UNNORMALIZEDPROPERTYLINK CASCADE;
DROP TABLE IF EXISTS POSTEDNEW CASCADE;
DROP TYPE IF EXISTS FYLLO CASCADE;
DROP TYPE IF EXISTS ADDRESS CASCADE;
DROP TYPE IF EXISTS CONTENT CASCADE;

-- TYPE: FYLLO
CREATE TYPE FYLLO AS ENUM ('Male','Female');

-- TYPE: ADDRESS
CREATE TYPE ADDRESS AS (
    STREET VARCHAR(60),
    POLH   VARCHAR(60),
    CODE   VARCHAR(60)
);

-- TYPE: CONTENT
CREATE TYPE CONTENT AS (
    NICKNAME TEXT,
    POSTTEXT TEXT,
    POSTDATE DATE,
    ARTWORKS TEXT[]
);

-- TABLE: AUCTIONHOUSE
CREATE TABLE AUCTIONHOUSE (
    AUCTIONHOUSEID TEXT NOT NULL,
    NAME           TEXT NOT NULL UNIQUE,
    ADDRESS        ADDRESS,
    PHONE          TEXT[],
    WEBSITE        TEXT,
    PRIMARY KEY (AUCTIONHOUSEID)
);

-- TABLE: AUCTION
CREATE TABLE AUCTION (
    AUCTIONID      TEXT NOT NULL,
    NAME           TEXT NOT NULL UNIQUE,
    OVERVIEW       TEXT,
    DATE           TEXT NOT NULL,
    LOCATION       TEXT,
    WEBLINK        TEXT,
    AUCTIONHOUSEID TEXT NOT NULL,
    PRIMARY KEY (AUCTIONID),
    FOREIGN KEY (AUCTIONHOUSEID) REFERENCES AUCTIONHOUSE (AUCTIONHOUSEID)
);

-- TABLE: ARTIST
CREATE TABLE ARTIST (
    ARTISTID    TEXT NOT NULL,
    NAME        TEXT NOT NULL,
    SEX         FYLLO,
    NATIONALITY TEXT,
    YEAROFBIRTH TEXT NOT NULL,
    YEAROFDEATH TEXT,
    SHORTCV     TEXT,
    WEBLINK     TEXT,
    PRIMARY KEY (ARTISTID)
);

-- TABLE: TYPEOFWORK
CREATE TABLE TYPEOFWORK (
    TYPEID  TEXT NOT NULL,
    NAME    TEXT NOT NULL UNIQUE,
    WEBLINK TEXT,
    PRIMARY KEY (TYPEID)
);

-- TABLE: ARTWORK
CREATE TABLE ARTWORK (
    ARTWORKID      TEXT NOT NULL,
    NAME           TEXT NOT NULL,
    DESCRIPTION    TEXT,
    YEAROFCREATION TEXT,
    PHOTO          TEXT,
    ARTISTID       TEXT,
    TYPEID         TEXT NOT NULL,
    PRIMARY KEY (ARTWORKID),
    FOREIGN KEY (ARTISTID) REFERENCES ARTIST (ARTISTID),
    FOREIGN KEY (TYPEID) REFERENCES TYPEOFWORK (TYPEID)
);

-- TABLE: INCLUDED
CREATE TABLE INCLUDED (
    AUCTIONID  TEXT    NOT NULL,
    ARTWORKID  TEXT    NOT NULL,
    VALUEDFROM INTEGER NOT NULL CHECK (VALUEDFROM >= 0),
    VALUEDTO   INTEGER CHECK (VALUEDTO >= VALUEDFROM),
    SOLDFOR    INTEGER CHECK (SOLDFOR >= 0),
    PRIMARY KEY (AUCTIONID, ARTWORKID),
    FOREIGN KEY (AUCTIONID) REFERENCES AUCTION (AUCTIONID),
    FOREIGN KEY (ARTWORKID) REFERENCES ARTWORK (ARTWORKID)
);

-- TABLE: COLLECTOR
CREATE TABLE COLLECTOR (
    NICKNAME  TEXT,
    FIRSTNAME TEXT,
    LASTNAME  TEXT,
    SEX       FYLLO,
    ADDRESS   ADDRESS,
    PRIMARY KEY (NICKNAME)
);

-- TABLE: INTEREST
CREATE TABLE INTEREST (
    NICKNAME  TEXT,
    AUCTIONID TEXT,
    PRIMARY KEY (NICKNAME, AUCTIONID),
    FOREIGN KEY (NICKNAME) REFERENCES COLLECTOR (NICKNAME),
    FOREIGN KEY (AUCTIONID) REFERENCES AUCTION (AUCTIONID)
);

-- TABLE: POSTS
CREATE TABLE POSTS (
    POSTID      INTEGER,
    AUTHOR      TEXT,
    AUCTION     TEXT,
    POSTCONTENT CONTENT,
    PRIMARY KEY (POSTID),
    foreign key (AUTHOR) references COLLECTOR (NICKNAME),
    foreign key (AUCTION) REFERENCES AUCTION (AUCTIONID)
);

CREATE TABLE EXPERT (
    LIST_OF_TYPES TEXT[],
    PRIMARY KEY (NICKNAME)
) INHERITS (COLLECTOR);

CREATE TABLE NOVICE (
    DATE_OF_BIRTH DATE,
    TYPEID        TEXT[],
    PRIMARY KEY (NICKNAME)
) INHERITS (COLLECTOR);

-- -- -- -- -- -- -- -- -- -- Graph Table Implementation -- -- -- -- -- -- -- -- -- --
-- CREATE TABLE FOLLOWS (
--     NICKNAME1 VARCHAR(30) NOT NULL,
--     NICKNAME2 VARCHAR(30) NOT NULL,
--     FOREIGN KEY (NICKNAME1) REFERENCES COLLECTOR (NICKNAME),
--     FOREIGN KEY (NICKNAME2) REFERENCES COLLECTOR (NICKNAME),
--     PRIMARY KEY (NICKNAME1, NICKNAME2)
-- );
--
-- CREATE TABLE ARTWORKINTEREST (
--     NICKNAME VARCHAR(30) NOT NULL,
--     ARTWORKS VARCHAR(30)[],
--     FOREIGN KEY (NICKNAME) REFERENCES COLLECTOR (NICKNAME),
--     PRIMARY KEY (NICKNAME)
-- );
--
-- CREATE TABLE POSTED (
--     NICKNAME VARCHAR(30) NOT NULL,
--     POSTID   INTEGER,
--     AUCTION  TEXT,
--     WALLNAME TEXT,
--     POSTTEXT TEXT,
--     POSTDATE DATE,
--     FOREIGN KEY (NICKNAME) REFERENCES COLLECTOR (NICKNAME),
--     PRIMARY KEY (NICKNAME, POSTID)
-- );

-- -- -- -- -- -- -- -- -- -- Graph Abstraction -- -- -- -- -- -- -- -- -- --
/*
    THIS IS AN IMPLEMENTATION FOR PROPERTY GRAPH WITH INHERITANCE
*/

CREATE TABLE GRAPHNODE (
    NODEKEY VARCHAR(30) NOT NULL,
    FACET   VARCHAR(30),
    PRIMARY KEY (NODEKEY)
);

CREATE TABLE NORMALIZEDPROPERTYLINK (
    NODEKEY1 VARCHAR(30) NOT NULL,
    NODEKEY2 VARCHAR(30) NOT NULL,
    PROPERTYLABEL VARCHAR(30) NOT NULL,
    FOREIGN KEY (NODEKEY1) REFERENCES GRAPHNODE (NODEKEY),
    FOREIGN KEY (NODEKEY2) REFERENCES GRAPHNODE (NODEKEY),
    PRIMARY KEY (NODEKEY1, NODEKEY2, PROPERTYLABEL)
);

CREATE TABLE UNNORMALIZEDPROPERTYLINK (
    NODEKEY1 VARCHAR(30) NOT NULL,
    NODEKEY2 VARCHAR(30)[] NOT NULL,
    PROPERTYLABEL VARCHAR(30) NOT NULL,
    FOREIGN KEY (NODEKEY1) REFERENCES GRAPHNODE (NODEKEY),
    PRIMARY KEY (NODEKEY1, NODEKEY2, PROPERTYLABEL)
);


CREATE TABLE POSTED (
    PRIMARY KEY (NODEKEY),
    NICKNAME VARCHAR(30) NOT NULL,
    AUCTION  TEXT,
    WALLNAME TEXT,
    POSTTEXT TEXT,
    POSTDATE DATE,
    FOREIGN KEY (NICKNAME) REFERENCES COLLECTOR (NICKNAME)
) INHERITS (GRAPHNODE);

INSERT INTO GRAPHNODE VALUES ('marcelo97', 'collector');
INSERT INTO GRAPHNODE VALUES ('mitsos13', 'collector');
INSERT INTO GRAPHNODE VALUES ('mariap', 'collector');
INSERT INTO GRAPHNODE VALUES ('john', 'collector');
INSERT INTO GRAPHNODE VALUES (1001, 'post');
INSERT INTO GRAPHNODE VALUES (1002, 'post');
INSERT INTO GRAPHNODE VALUES (1003, 'post');
INSERT INTO GRAPHNODE VALUES (1004, 'post');
INSERT INTO GRAPHNODE VALUES (1005, 'post');
INSERT INTO GRAPHNODE VALUES (1006, 'post');
INSERT INTO GRAPHNODE VALUES (1007, 'post');
INSERT INTO GRAPHNODE VALUES (1008, 'post');
INSERT INTO GRAPHNODE VALUES (1009, 'post');
INSERT INTO GRAPHNODE VALUES (1010, 'post');
INSERT INTO GRAPHNODE VALUES ('AW04', 'artwork');
INSERT INTO GRAPHNODE VALUES ('AW06', 'artwork');
INSERT INTO GRAPHNODE VALUES ('AW08', 'artwork');
INSERT INTO GRAPHNODE VALUES ('AW01', 'artwork');
INSERT INTO GRAPHNODE VALUES ('AW05', 'artwork');
INSERT INTO GRAPHNODE VALUES ('AW09', 'artwork');
INSERT INTO GRAPHNODE VALUES ('AW10', 'artwork');
INSERT INTO GRAPHNODE VALUES ('AW02', 'artwork');
INSERT INTO GRAPHNODE VALUES ('AW12', 'artwork');
INSERT INTO GRAPHNODE VALUES ('AW13', 'artwork');
INSERT INTO GRAPHNODE VALUES ('AW14', 'artwork');
INSERT INTO GRAPHNODE VALUES ('AW19', 'artwork');
INSERT INTO GRAPHNODE VALUES ('AW22', 'artwork');


