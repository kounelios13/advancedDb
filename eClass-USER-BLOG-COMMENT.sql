DROP TABLE IF EXISTS GRAPHNODE CASCADE;
Drop table IF EXISTS USERS cascade;
Drop table IF EXISTS BLOG cascade;
Drop table IF EXISTS COMMENT cascade;
Drop table IF EXISTS PROPERTYLINK cascade;

DROP TYPE IF EXISTS ADDRESS cascade;
DROP TYPE IF EXISTS FYLLO cascade;

CREATE TYPE FYLLO AS ENUM ('Άνδρας','Γυναίκα');

CREATE TYPE ADDRESS AS  (
	POLH VARCHAR(60),
	XORA VARCHAR(60)
);

/* Δημιουργία Πίνακα {GRAPHNODE} */
CREATE TABLE GRAPHNODE (
    NODEKEY VARCHAR(30) NOT NULL,
    FACET VARCHAR(30),
    PRIMARY KEY(NODEKEY)
);

/* Δημιουργία Πίνακα {USERS} */
CREATE TABLE USERS (
    PRIMARY KEY(NODEKEY),
    ONOMA VARCHAR(60) NOT NULL,
    EPONYMO VARCHAR(120),
    GENOS FYLLO NOT NULL,
    PERIGRAFH VARCHAR(400)  NOT NULL,
    TELEPHONE varchar (20) [],
    DIAMONH ADDRESS
) INHERITS (GRAPHNODE);


/* Δημιουργία Πίνακα {BLOG} */
CREATE TABLE BLOG (
    PRIMARY KEY(NODEKEY),
    BLOGNAME VARCHAR(60) NOT NULL,
    ADMINISTRATOR VARCHAR(120),
    FOREIGN KEY (ADMINISTRATOR) REFERENCES USERS (NODEKEY)
) INHERITS (GRAPHNODE);

/* Δημιουργία Πίνακα {COMMENT} */
CREATE TABLE COMMENT (
    PRIMARY KEY(NODEKEY),
    BLOGNAME VARCHAR(60) NOT NULL,
    USERNAME VARCHAR(120) NOT NULL,
    MSG VARCHAR(400)  NOT NULL,
    D_MSG DATE,
    FOREIGN KEY (BLOGNAME) REFERENCES BLOG (NODEKEY),
    FOREIGN KEY (USERNAME) REFERENCES USERS (NODEKEY)
) INHERITS (GRAPHNODE);

/* Δημιουργία Πίνακα {PROPERTYLINK} */
CREATE TABLE PROPERTYLINK (
    NODEKEY1 VARCHAR(30) NOT NULL,
    NODEKEY2 VARCHAR(30) NOT NULL,
    PROPERTYLABEL VARCHAR(30) NOT NULL,
    FOREIGN KEY (NODEKEY1) REFERENCES GRAPHNODE (NODEKEY),
    FOREIGN KEY (NODEKEY2) REFERENCES GRAPHNODE (NODEKEY),
    PRIMARY KEY (NODEKEY1, NODEKEY2, PROPERTYLABEL)
);

INSERT INTO GRAPHNODE VALUES ('u01','Χρήστης');
INSERT INTO GRAPHNODE VALUES ('u02', 'Χρήστης');
INSERT INTO GRAPHNODE VALUES ('b01', 'Blog');
INSERT INTO GRAPHNODE VALUES ('b02', 'Blog');
INSERT INTO GRAPHNODE VALUES ('b03', 'Blog');
INSERT INTO GRAPHNODE VALUES ('c01', 'Σχόλιο');

/* Εισαγωγή εγγραφών στον  Πίνακα {USERS} */
INSERT INTO USERS VALUES ('u01', 'Χρήστης', 'Jacob', 'Date', 'Άνδρας', 'Διδάσκων εργαστηρίου Προχωρημένα Θέματα Βάσεων Δεδομένων', '{2810379190, 6973359242}', ROW('Χανιά',  'Ελλάς'));
INSERT INTO USERS VALUES ('u02', 'Χρήστης', 'George', 'Hunt', 'Άνδρας', 'Βοηθός εργαστηρίου Προχωρημένα Θέματα Βάσεων Δεδομένων', '{2810321040, 6978559242}', ROW('Ηράκλειο',  'Ελλάς'));

/* Εισαγωγή εγγραφών στον  Πίνακα {BLOG} */
INSERT INTO BLOG VALUES ('b01', 'Blog', 'Information Systems', 'u02');
INSERT INTO BLOG VALUES ('b02', 'Blog', 'Databases', 'u01');
INSERT INTO BLOG VALUES ('b03', 'Blog', 'Computer Science', 'u02');

/* Εισαγωγή εγγραφών στον  Πίνακα {COMMENT} */
INSERT INTO COMMENT VALUES ('c01', 'Σχόλιο', 'b01', 'u01', 'Exactly what I was loking for !', TO_DATE('16/03/2020', 'dd/mm/yyyy'));

/* Εισαγωγή εγγραφών στον  Πίνακα {PROPERTYLINK} */
INSERT INTO PROPERTYLINK VALUES ('u02', 'b03', 'ADMINS');
INSERT INTO PROPERTYLINK VALUES ('u02', 'b01', 'ADMINS');
INSERT INTO PROPERTYLINK VALUES ('u01', 'b02', 'ADMINS');
INSERT INTO PROPERTYLINK VALUES ('u01', 'b01', 'FOLLOWS');
INSERT INTO PROPERTYLINK VALUES ('u01', 'b02', 'FOLLOWS');
INSERT INTO PROPERTYLINK VALUES ('u01', 'b03', 'FOLLOWS');
INSERT INTO PROPERTYLINK VALUES ('u02', 'b01', 'FOLLOWS');
INSERT INTO PROPERTYLINK VALUES ('u01', 'c01', 'UPLOADS');
INSERT INTO PROPERTYLINK VALUES ('u02', 'c01', 'TAGS');
INSERT INTO PROPERTYLINK VALUES ('c01', 'b01', 'REGISTERS');

-- -- Q1: Βρείτε τους χρήστες που αναρτούν σχόλια στο ‘b01’;
-- SELECT PROPERTYLINK.NODEKEY1
-- FROM PROPERTYLINK
-- WHERE PROPERTYLINK.NODEKEY2='b01' AND PROPERTYLINK.PROPERTYLABEL='UPLOADS';
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
SELECT USERS.ONOMA, USERS.EPONYMO
FROM USERS, PROPERTYLINK pf1, PROPERTYLINK pf2
WHERE USERS.NODEKEY = pf1.NODEKEY1
AND pf1.PROPERTYLABEL = 'UPLOADS'
AND pf2.NODEKEY1 = pf1.NODEKEY2
AND pf2.NODEKEY2 = 'b01';
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
SELECT USERS.ONOMA, USERS.EPONYMO
FROM USERS, PROPERTYLINK pf1, PROPERTYLINK pf2
WHERE USERS.NODEKEY = pf1.NODEKEY1
AND pf1.PROPERTYLABEL = 'UPLOADS'
AND pf2.NODEKEY1 = pf1.NODEKEY2
AND pf2.NODEKEY2 IN (SELECT NODEKEY2
            FROM COMMENT, PROPERTYLINK pf3
            WHERE COMMENT.NODEKEY = pf3.NODEKEY1
            AND pf3.PROPERTYLABEL = 'REGISTERS'
            AND pf3.NODEKEY2 = 'b01');
-- -- Q2: Βρείτε τους χρήστες που κάνουν tag σχόλια που έχουν αναρτηθεί στο ‘b01’;
-- SELECT PROPERTYLINK.NODEKEY1
-- FROM PROPERTYLINK
-- WHERE PROPERTYLINK.NODEKEY2='b01' AND PROPERTYLINK.PROPERTYLABEL='TAGS';
-- -- -- -- --- -- -- -- -- -- -- -- -- -- -- --- -- -- -- -- -- -- -- -- -- -- --- -- -- -- -- -- --
SELECT USERS.ONOMA, USERS.EPONYMO
FROM USERS, PROPERTYLINK pf1, PROPERTYLINK pf2
WHERE USERS.NODEKEY = pf1.NODEKEY1
AND pf1.PROPERTYLABEL = 'TAGS'
AND pf2.NODEKEY1 = pf1.NODEKEY2
AND pf2.NODEKEY2 = 'b01';
-- -- Q3: Βρείτε τους χρήστες που είτε αναρτούν σχόλια στο ‘b01’ είτε κάνουν tag σχόλια του ‘b01’;
-- SELECT PROPERTYLINK.NODEKEY1
-- FROM PROPERTYLINK
-- WHERE PROPERTYLINK.NODEKEY2='b01' AND PROPERTYLINK.PROPERTYLABEL='TAGS'
-- OR PROPERTYLINK.NODEKEY2='b01' AND PROPERTYLINK.PROPERTYLABEL='UPLOADS';
-- -- -- -- --- -- -- -- -- -- -- -- -- -- -- --- -- -- -- -- -- -- -- -- -- -- --- -- -- -- -- -- --
SELECT DISTINCT USERS.ONOMA, USERS.EPONYMO
FROM USERS, PROPERTYLINK pf1, PROPERTYLINK pf2
WHERE USERS.NODEKEY = pf1.NODEKEY1
AND pf1.PROPERTYLABEL = 'UPLOADS' OR pf1.PROPERTYLABEL = 'TAGS'
AND pf2.NODEKEY1 = pf1.NODEKEY2
AND pf2.NODEKEY2 = 'b01';
-- -- Q4: Ποιές διαδρομές (δηλαδή ακολουθία κόμβων) συνδέουν τους κόμβους 'u01' και 'b01'?
-- SELECT *
-- FROM PROPERTYLINK
-- WHERE PROPERTYLINK.NODEKEY1='u01' AND PROPERTYLINK.NODEKEY2='b01';
-- -- OR PROPERTYLINK.NODEKEY2='u01' AND PROPERTYLINK.NODEKEY1='b01';
--
-- -- Q5: Πόσο μακριά βρίσκονται οι κόμβοι ‘u01’ και ‘b01’ (παρόμοιο ερώτημα με το Q4);
-- SELECT NODEKEY1 as Αρχή, NODEKEY2 as Στόχος
-- FROM PROPERTYLINK
-- WHERE NODEKEY1='u02' AND PROPERTYLABEL='FOLLOWS';

-- ΔΡΑΣΤΗΡΙΌΤΗΤΑ
SELECT USERS.ONOMA, USERS.EPONYMO, COUNT(PROPERTYLINK.NODEKEY1) AS ΔΡΑΣΤΗΡΙΌΤΗΤΑ
FROM USERS, PROPERTYLINK
WHERE USERS.NODEKEY = PROPERTYLINK.NODEKEY1
GROUP BY USERS.NODEKEY, USERS.ONOMA, USERS.EPONYMO;