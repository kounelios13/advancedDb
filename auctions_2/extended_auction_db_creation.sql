DROP TABLE IF EXISTS ARTWORK CASCADE;
DROP TABLE IF EXISTS TYPEOFWORK;
DROP TABLE IF EXISTS ARTIST;
DROP TABLE IF EXISTS AUCTION CASCADE;
DROP TABLE IF EXISTS AUCTIONHOUSE CASCADE;
DROP TABLE IF EXISTS INCLUDED;
DROP TABLE IF EXISTS COLLECTOR CASCADE;
DROP TABLE IF EXISTS INTEREST;
DROP TABLE IF EXISTS POSTS CASCADE;
DROP TYPE IF EXISTS FYLLO CASCADE;
DROP TYPE IF EXISTS ADDRESS CASCADE;
DROP TYPE IF EXISTS CONTENT CASCADE;

-- TYPE: FYLLO
CREATE TYPE FYLLO AS ENUM ('Male','Female');

-- TYPE: ADDRESS
CREATE TYPE ADDRESS AS
(
    STREET VARCHAR(60),
    POLH   VARCHAR(60),
    CODE   VARCHAR(60)
);

-- TYPE: CONTENT
CREATE TYPE CONTENT AS
(
    NICKNAME TEXT,
    POSTTEXT TEXT,
    POSTDATE DATE,
    ARTWORKS TEXT[]
);

-- TABLE: AUCTIONHOUSE
CREATE TABLE AUCTIONHOUSE
(
    AUCTIONHOUSEID TEXT NOT NULL,
    NAME           TEXT NOT NULL UNIQUE,
    ADDRESS        ADDRESS,
    PHONE          TEXT[],
    WEBSITE        TEXT,
    PRIMARY KEY (AUCTIONHOUSEID)
);

-- TABLE: AUCTION
CREATE TABLE AUCTION
(
    AUCTIONID      TEXT NOT NULL,
    NAME           TEXT NOT NULL UNIQUE,
    OVERVIEW       TEXT,
    DATE           TEXT NOT NULL,
    LOCATION       TEXT,
    WEBLINK        TEXT,
    AUCTIONHOUSEID TEXT NOT NULL,
    PRIMARY KEY (AUCTIONID),
    FOREIGN KEY (AUCTIONHOUSEID) REFERENCES AUCTIONHOUSE (AUCTIONHOUSEID)
);

-- TABLE: ARTIST
CREATE TABLE ARTIST
(
    ARTISTID    TEXT NOT NULL,
    NAME        TEXT NOT NULL,
    SEX         FYLLO,
    NATIONALITY TEXT,
    YEAROFBIRTH TEXT NOT NULL,
    YEAROFDEATH TEXT,
    SHORTCV     TEXT,
    WEBLINK     TEXT,
    PRIMARY KEY (ARTISTID)
);

-- TABLE: TYPEOFWORK
CREATE TABLE TYPEOFWORK
(
    TYPEID  TEXT NOT NULL,
    NAME    TEXT NOT NULL UNIQUE,
    WEBLINK TEXT,
    PRIMARY KEY (TYPEID)
);

-- TABLE: ARTWORK
CREATE TABLE ARTWORK
(
    ARTWORKID      TEXT NOT NULL,
    NAME           TEXT NOT NULL,
    DESCRIPTION    TEXT,
    YEAROFCREATION TEXT,
    PHOTO          TEXT,
    ARTISTID       TEXT,
    TYPEID         TEXT NOT NULL,
    PRIMARY KEY (ARTWORKID),
    FOREIGN KEY (ARTISTID) REFERENCES ARTIST (ARTISTID),
    FOREIGN KEY (TYPEID) REFERENCES TYPEOFWORK (TYPEID)
);

-- TABLE: INCLUDED
CREATE TABLE INCLUDED
(
    AUCTIONID  TEXT    NOT NULL,
    ARTWORKID  TEXT    NOT NULL,
    VALUEDFROM INTEGER NOT NULL CHECK (VALUEDFROM >= 0),
    VALUEDTO   INTEGER CHECK (VALUEDTO >= VALUEDFROM),
    SOLDFOR    INTEGER CHECK (SOLDFOR >= 0),
    PRIMARY KEY (AUCTIONID, ARTWORKID),
    FOREIGN KEY (AUCTIONID) REFERENCES AUCTION (AUCTIONID),
    FOREIGN KEY (ARTWORKID) REFERENCES ARTWORK (ARTWORKID)
);

-- TABLE: COLLECTOR
CREATE TABLE COLLECTOR
(
    NICKNAME  TEXT,
    FIRSTNAME TEXT,
    LASTNAME  TEXT,
    SEX       FYLLO,
    ADDRESS   ADDRESS,
    PRIMARY KEY (NICKNAME)
);

-- TABLE: INTEREST
CREATE TABLE INTEREST
(
    NICKNAME       TEXT,
    AUCTIONID TEXT,
    PRIMARY KEY (NICKNAME, AUCTIONID),
    FOREIGN KEY (NICKNAME) REFERENCES COLLECTOR (NICKNAME),
    FOREIGN KEY (AUCTIONID) REFERENCES AUCTION (AUCTIONID)
);

-- TABLE: POSTS
CREATE TABLE POSTS
(
    POSTID      INTEGER,
    AUTHOR      TEXT,
    AUCTION     TEXT,
    POSTCONTENT CONTENT,
    PRIMARY KEY (POSTID),
    foreign key (AUTHOR) references COLLECTOR (NICKNAME),
    foreign key (AUCTION) REFERENCES AUCTION (AUCTIONID)
);
